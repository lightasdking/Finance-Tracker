@page "/debts"

@using FinanceTracker.Models
@inject FinanceTracker.Services.UserService UserService

<h1>User Debts</h1>

<table class="table">
    <thead>
        <tr>
            <th>Debt ID</th>
            <th>User Name</th>
            <th>Total Debt</th>
            <th>Paid Amount</th>
            <th>Remaining Debt</th>
            <th>Date</th>
            <th>Description</th>
        </tr>
    </thead>
    <tbody>
        @if (Data.Debts != null && Data.Users != null)
        {
            @foreach (var debt in Data.Debts)
            {
                <tr>
                    <td>@debt.Id</td>
                    <td>@Data.Users.FirstOrDefault(u => u.Id == debt.UserId)?.Name</td>
                    <td>@debt.Amount.ToString("C")</td>
                    <td>@debt.PaidAmount.ToString("C")</td>
                    <td>@(debt.Amount - debt.PaidAmount).ToString("C")</td>
                    <td>@debt.Date.ToString("MM/dd/yyyy")</td>
                    <td>@debt.Description</td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="7">No debts available.</td>
            </tr>
        }
    </tbody>
</table>


<h2>Add New Debt</h2>

<EditForm Model="newDebt" OnValidSubmit="HandleDebtSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="userId">User</label>
        <select id="userId" @bind="newDebt.UserId" class="form-control">
            @if (Data.Users != null)
            {
                @foreach (var user in Data.Users)
                {
                    <option value="@user.Id">@user.Name</option>
                }
            }
        </select>
    </div>

    <div class="form-group">
        <label for="amount">Debt Amount</label>
        <InputNumber id="amount" @bind-Value="newDebt.Amount" class="form-control" />
    </div>

    <div class="form-group">
        <label for="paidAmount">Paid Amount</label>
        <InputNumber id="paidAmount" @bind-Value="newDebt.PaidAmount" class="form-control" />
    </div>

    <div class="form-group">
        <label for="description">Description</label>
        <InputText id="description" @bind-Value="newDebt.Description" class="form-control" />
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Add Debt</button>
    </div>
</EditForm>
<style>
    /* General Styling */
    body {
        font-family: Arial, sans-serif;
        background-color: #1e293b;
        color: #e2e8f0;
        padding: 20px;
    }

    h1, h2 {
        text-align: center;
        color: #ffffff;
    }

    /* Form Styling */
    .form-group {
        margin-bottom: 20px;
    }

    .form-control {
        padding: 10px;
        border-radius: 5px;
        border: none;
        background-color: #4a5568;
        color: #ffffff;
        transition: background-color 0.3s ease, border-color 0.3s ease;
    }

        .form-control.warning {
            background-color: #d69e2e;
        }

        .form-control.error {
            background-color: #e53e3e;
            color: #ffffff;
        }

    .btn {
        background-color: #3182ce;
        color: #ffffff;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        font-weight: bold;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

        .btn:hover {
            background-color: #2563eb;
        }

    /* Table Styling */
    .table {
        width: 100%;
        border-collapse: collapse;
        background-color: #2d3748;
        margin-top: 30px;
        border-radius: 5px;
    }

        .table th, .table td {
            text-align: left;
            padding: 12px;
            border-bottom: 1px solid #4a5568;
            color: #e2e8f0;
        }

        .table th {
            background-color: #4a5568;
        }

        .table tr.success {
            background-color: #38a169;
        }

        .table tr.warning {
            background-color: #d69e2e;
        }

        .table tr.error {
            background-color: #e53e3e;
        }

        .table tr:hover {
            background-color: #334155;
        }
</style>


@code {
    private AppData Data;
    private Debt newDebt = new Debt();

    protected override void OnInitialized()
    {
        // Load initial data
        Data = UserService.LoadData();
    }

    private void HandleDebtSubmit()
    {
        // Add new debt
        newDebt.Id = Data.Debts.Count + 1;
        newDebt.Date = DateTime.Now;
        Data.Debts.Add(newDebt);

        // Save updated data
        UserService.SaveData(Data);

        // Reset form
        newDebt = new Debt();
    }
}
